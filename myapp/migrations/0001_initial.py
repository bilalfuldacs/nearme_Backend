# Generated by Django 5.0.14 on 2025-10-15 17:54

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Event title', max_length=200)),
                ('description', models.TextField(help_text='Event description')),
                ('max_attendees', models.PositiveIntegerField(help_text='Maximum number of attendees', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10000)])),
                ('start_date', models.DateField(help_text='Event start date')),
                ('end_date', models.DateField(help_text='Event end date')),
                ('start_time', models.TimeField(help_text='Event start time')),
                ('end_time', models.TimeField(help_text='Event end time')),
                ('street', models.CharField(help_text='Street address', max_length=255)),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State/Province', max_length=100)),
                ('postal_code', models.CharField(help_text='Postal/ZIP code', max_length=20)),
                ('organizer_name', models.CharField(blank=True, default='', help_text='Organizer name (from User)', max_length=255)),
                ('organizer_email', models.EmailField(blank=True, default='', help_text='Organizer email (from User)', max_length=254)),
                ('confirmed_attendees', models.PositiveIntegerField(default=0, help_text='Number of confirmed attendees')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the event is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=555)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='myapp.event')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_conversations', to='myapp.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_conversations', to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Event image', upload_to='event_images/%Y/%m/%d/')),
                ('caption', models.CharField(blank=True, help_text='Image caption', max_length=255)),
                ('is_primary', models.BooleanField(default=False, help_text='Whether this is the primary image')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(help_text='Associated event', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='myapp.event')),
            ],
            options={
                'verbose_name': 'Event Image',
                'verbose_name_plural': 'Event Images',
                'db_table': 'event_images',
                'ordering': ['-is_primary', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='myapp.conversation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.user')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='organizer_id',
            field=models.ForeignKey(help_text='Event organizer user reference', on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to='myapp.user'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['start_date', 'end_date'], name='events_start_d_92ba55_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['city', 'state'], name='events_city_0a7c0f_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['organizer_id'], name='events_organiz_d41bb0_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['is_active'], name='events_is_acti_45ba60_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversation',
            unique_together={('event', 'user', 'host')},
        ),
    ]
